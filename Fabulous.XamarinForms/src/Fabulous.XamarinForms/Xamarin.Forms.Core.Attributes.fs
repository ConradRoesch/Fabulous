// Copyright 2018-2020 Fabulous contributors. See LICENSE.md for license.
namespace Fabulous.XamarinForms

#nowarn "59" // cast always holds
#nowarn "66" // cast always holds
#nowarn "67" // cast always holds
#nowarn "760"

open Fabulous

module ViewAttributes =
    let CommandAttribKey : AttributeKey<_> = AttributeKey<unit -> unit>("Command")
    let CommandCanExecuteAttribKey : AttributeKey<_> = AttributeKey<bool>("CommandCanExecute")
    let IconOverrideAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("IconOverride")
    let IsEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsEnabled")
    let TextOverrideAttribKey : AttributeKey<_> = AttributeKey<string>("TextOverride")
    let NameAttribKey : AttributeKey<_> = AttributeKey<string>("Name")
    let AutomationIdAttribKey : AttributeKey<_> = AttributeKey<string>("AutomationId")
    let ClassIdAttribKey : AttributeKey<_> = AttributeKey<string>("ClassId")
    let EffectsAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("Effects")
    let MenuAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("Menu")
    let StyleIdAttribKey : AttributeKey<_> = AttributeKey<string>("StyleId")
    let ChildrenAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("Children")
    let TextAttribKey : AttributeKey<_> = AttributeKey<string>("Text")
    let AcceleratorAttribKey : AttributeKey<_> = AttributeKey<string>("Accelerator")
    let IconImageSourceAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("IconImageSource")
    let IsDestructiveAttribKey : AttributeKey<_> = AttributeKey<bool>("IsDestructive")
    let StyleClassAttribKey : AttributeKey<_> = AttributeKey<string array>("StyleClass")
    let ToolbarItemOrderAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ToolbarItemOrder>("ToolbarItemOrder")
    let PriorityAttribKey : AttributeKey<_> = AttributeKey<int>("Priority")
    let TappedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("Tapped")
    let ContextActionsAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("ContextActions")
    let HeightAttribKey : AttributeKey<_> = AttributeKey<float>("Height")
    let CompletedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("Completed")
    let HorizontalTextAlignmentAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.TextAlignment>("HorizontalTextAlignment")
    let KeyboardAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Keyboard>("Keyboard")
    let LabelAttribKey : AttributeKey<_> = AttributeKey<string>("Label")
    let LabelColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("LabelColor")
    let PlaceholderAttribKey : AttributeKey<_> = AttributeKey<string>("Placeholder")
    let VerticalTextAlignmentAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.TextAlignment>("VerticalTextAlignment")
    let TextChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.TextChangedEventArgs>>("TextChanged")
    let OnChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ToggledEventArgs>>("OnChanged")
    let OnAttribKey : AttributeKey<_> = AttributeKey<bool>("On")
    let OnColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("OnColor")
    let TextCellDetailAttribKey : AttributeKey<_> = AttributeKey<string>("TextCellDetail")
    let DetailColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("DetailColor")
    let TextColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("TextColor")
    let ImageSourceAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("ImageSource")
    let ViewAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("View")
    let SpansAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("Spans")
    let GestureRecognizersAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("GestureRecognizers")
    let CharacterSpacingAttribKey : AttributeKey<_> = AttributeKey<float>("CharacterSpacing")
    let BackgroundColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("BackgroundColor")
    let FontAttributesAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FontAttributes>("FontAttributes")
    let FontFamilyAttribKey : AttributeKey<_> = AttributeKey<string>("FontFamily")
    let FontSizeAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.FontSize.Value>("FontSize")
    let LineHeightAttribKey : AttributeKey<_> = AttributeKey<float>("LineHeight")
    let StyleAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Style>("Style")
    let TextDecorationsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.TextDecorations>("TextDecorations")
    let TextTransformAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.TextTransform>("TextTransform")
    let ButtonsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ButtonsMask>("Buttons")
    let NumberOfClicksRequiredAttribKey : AttributeKey<_> = AttributeKey<int>("NumberOfClicksRequired")
    let DragStartingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.DragStartingEventArgs>>("DragStarting")
    let DropCompletedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.DropCompletedEventArgs>>("DropCompleted")
    let CanDragAttribKey : AttributeKey<_> = AttributeKey<bool>("CanDrag")
    let DragLeaveAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.DragEventArgs>>("DragLeave")
    let DragOverAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.DragEventArgs>>("DragOver")
    let DropAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.DropEventArgs>>("Drop")
    let AllowDropAttribKey : AttributeKey<_> = AttributeKey<bool>("AllowDrop")
    let PanUpdatedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.PanUpdatedEventArgs>>("PanUpdated")
    let TouchPointsAttribKey : AttributeKey<_> = AttributeKey<int>("TouchPoints")
    let PinchUpdatedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.PinchGestureUpdatedEventArgs>>("PinchUpdated")
    let SwipeGestureRecognizerDirectionAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SwipeDirection>("SwipeGestureRecognizerDirection")
    let SwipeGestureRecognizerThresholdAttribKey : AttributeKey<_> = AttributeKey<uint32>("SwipeGestureRecognizerThreshold")
    let NumberOfTapsRequiredAttribKey : AttributeKey<_> = AttributeKey<int>("NumberOfTapsRequired")
    let ShellBackButtonBehaviorAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("ShellBackButtonBehavior")
    let ShellBackgroundColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellBackgroundColor")
    let ShellDisabledColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellDisabledColor")
    let ShellForegroundColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellForegroundColor")
    let ShellFlyoutBehaviorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlyoutBehavior>("ShellFlyoutBehavior")
    let ShellNavBarIsVisibleAttribKey : AttributeKey<_> = AttributeKey<bool>("ShellNavBarIsVisible")
    let ShellPresentationModeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.PresentationMode>("ShellPresentationMode")
    let ShellSearchHandlerAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("ShellSearchHandler")
    let ShellTabBarBackgroundColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellTabBarBackgroundColor")
    let ShellTabBarDisabledColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellTabBarDisabledColor")
    let ShellTabBarForegroundColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellTabBarForegroundColor")
    let ShellTabBarIsVisibleAttribKey : AttributeKey<_> = AttributeKey<bool>("ShellTabBarIsVisible")
    let ShellTabBarTitleColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellTabBarTitleColor")
    let ShellTabBarUnselectedColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellTabBarUnselectedColor")
    let ShellTitleColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellTitleColor")
    let ShellTitleViewAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("ShellTitleView")
    let ShellUnselectedColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ShellUnselectedColor")
    let ShellNavBarHasShadowAttribKey : AttributeKey<_> = AttributeKey<bool>("ShellNavBarHasShadow")
    let AppearingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("Appearing")
    let DisappearingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("Disappearing")
    let FlyoutIconAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("FlyoutIcon")
    let IconAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("Icon")
    let IsTabStopAttribKey : AttributeKey<_> = AttributeKey<bool>("IsTabStop")
    let IsVisibleAttribKey : AttributeKey<_> = AttributeKey<bool>("IsVisible")
    let RouteAttribKey : AttributeKey<_> = AttributeKey<string>("Route")
    let TabIndexAttribKey : AttributeKey<_> = AttributeKey<int>("TabIndex")
    let TitleAttribKey : AttributeKey<_> = AttributeKey<string>("Title")
    let ContentTemplateAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("ContentTemplate")
    let MenuItemsAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("MenuItems")
    let FlyoutDisplayOptionsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlyoutDisplayOptions>("FlyoutDisplayOptions")
    let ShellItemCurrentItemAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("ShellItemCurrentItem")
    let ItemsAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("Items")
    let ShellSectionCurrentItemAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("ShellSectionCurrentItem")
    let VisualElementFocusedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.FocusEventArgs>>("VisualElementFocused")
    let SizeChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("SizeChanged")
    let VisualElementUnfocusedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.FocusEventArgs>>("VisualElementUnfocused")
    let AnchorXAttribKey : AttributeKey<_> = AttributeKey<float>("AnchorX")
    let AnchorYAttribKey : AttributeKey<_> = AttributeKey<float>("AnchorY")
    let BackgroundAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("Background")
    let BehaviorsAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("Behaviors")
    let ClipAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("Clip")
    let FlowDirectionAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlowDirection>("FlowDirection")
    let HeightRequestAttribKey : AttributeKey<_> = AttributeKey<float>("HeightRequest")
    let InputTransparentAttribKey : AttributeKey<_> = AttributeKey<bool>("InputTransparent")
    let MinimumHeightRequestAttribKey : AttributeKey<_> = AttributeKey<float>("MinimumHeightRequest")
    let MinimumWidthRequestAttribKey : AttributeKey<_> = AttributeKey<float>("MinimumWidthRequest")
    let OpacityAttribKey : AttributeKey<_> = AttributeKey<float>("Opacity")
    let ResourcesAttribKey : AttributeKey<_> = AttributeKey<(string * obj) array>("Resources")
    let RotationAttribKey : AttributeKey<_> = AttributeKey<float>("Rotation")
    let RotationXAttribKey : AttributeKey<_> = AttributeKey<float>("RotationX")
    let RotationYAttribKey : AttributeKey<_> = AttributeKey<float>("RotationY")
    let ScaleAttribKey : AttributeKey<_> = AttributeKey<float>("Scale")
    let ScaleXAttribKey : AttributeKey<_> = AttributeKey<float>("ScaleX")
    let ScaleYAttribKey : AttributeKey<_> = AttributeKey<float>("ScaleY")
    let StylesAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Style array>("Styles")
    let StyleSheetsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.StyleSheets.StyleSheet array>("StyleSheets")
    let TranslationXAttribKey : AttributeKey<_> = AttributeKey<float>("TranslationX")
    let TranslationYAttribKey : AttributeKey<_> = AttributeKey<float>("TranslationY")
    let VisualAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.IVisual>("Visual")
    let WidthRequestAttribKey : AttributeKey<_> = AttributeKey<float>("WidthRequest")
    let BackgroundImageSourceAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("BackgroundImageSource")
    let IsBusyAttribKey : AttributeKey<_> = AttributeKey<bool>("IsBusy")
    let PaddingAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Thickness>("Padding")
    let ToolbarItemsAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("ToolbarItems")
    let UseSafeAreaAttribKey : AttributeKey<_> = AttributeKey<bool>("UseSafeArea")
    let HasNavigationBarAttribKey : AttributeKey<_> = AttributeKey<bool>("HasNavigationBar")
    let CurrentPageChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("CurrentPageChanged")
    let CurrentPageAttribKey : AttributeKey<_> = AttributeKey<int>("CurrentPage")
    let BarBackgroundAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("BarBackground")
    let BarBackgroundColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("BarBackgroundColor")
    let BarTextColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("BarTextColor")
    let SelectedTabColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("SelectedTabColor")
    let UnselectedTabColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("UnselectedTabColor")
    let PoppedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.NavigationEventArgs>>("Popped")
    let PoppedToRootAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.NavigationEventArgs>>("PoppedToRoot")
    let PushedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.NavigationEventArgs>>("Pushed")
    let PagesAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("Pages")
    let BackButtonTitleAttribKey : AttributeKey<_> = AttributeKey<string>("BackButtonTitle")
    let HasBackButtonAttribKey : AttributeKey<_> = AttributeKey<bool>("HasBackButton")
    let IconColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("IconColor")
    let TitleIconImageSourceAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ImageSource>("TitleIconImageSource")
    let TitleViewAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("TitleView")
    let ShellNavigatedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ShellNavigatedEventArgs>>("ShellNavigated")
    let ShellNavigatingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ShellNavigatingEventArgs>>("ShellNavigating")
    let FlyoutBackdropAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("FlyoutBackdrop")
    let FlyoutBackgroundAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("FlyoutBackground")
    let FlyoutBackgroundColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("FlyoutBackgroundColor")
    let FlyoutBackgroundImageAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("FlyoutBackgroundImage")
    let FlyoutBackgroundImageAspectAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Aspect>("FlyoutBackgroundImageAspect")
    let FlyoutBehaviorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlyoutBehavior>("FlyoutBehavior")
    let FlyoutFooterTemplateAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.DataTemplate>("FlyoutFooterTemplate")
    let FlyoutHeaderAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("FlyoutHeader")
    let FlyoutHeaderBehaviorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlyoutHeaderBehavior>("FlyoutHeaderBehavior")
    let FlyoutHeightAttribKey : AttributeKey<_> = AttributeKey<float>("FlyoutHeight")
    let FlyoutIsPresentedAttribKey : AttributeKey<_> = AttributeKey<bool>("FlyoutIsPresented")
    let FlyoutVerticalScrollModeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ScrollMode>("FlyoutVerticalScrollMode")
    let FlyoutWidthAttribKey : AttributeKey<_> = AttributeKey<float>("FlyoutWidth")
    let GoToAsyncAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ShellNavigationState * Fabulous.XamarinForms.InputTypes.AnimationKind>("GoToAsync")
    let ContentAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("Content")
    let SizeAllocatedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<System.Tuple<System.Double,System.Double>>>("SizeAllocated")
    let HorizontalOptionsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.LayoutOptions>("HorizontalOptions")
    let MarginAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Thickness>("Margin")
    let VerticalOptionsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.LayoutOptions>("VerticalOptions")
    let ColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("Color")
    let IsRunningAttribKey : AttributeKey<_> = AttributeKey<bool>("IsRunning")
    let BoxViewCornerRadiusAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.CornerRadius>("BoxViewCornerRadius")
    let BorderColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("BorderColor")
    let BorderWidthAttribKey : AttributeKey<_> = AttributeKey<float>("BorderWidth")
    let ContentLayoutAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Button.ButtonContentLayout>("ContentLayout")
    let ButtonCornerRadiusAttribKey : AttributeKey<_> = AttributeKey<int>("ButtonCornerRadius")
    let CheckedChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.CheckedChangedEventArgs>>("CheckedChanged")
    let IsCheckedAttribKey : AttributeKey<_> = AttributeKey<bool>("IsChecked")
    let DateSelectedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.DateChangedEventArgs>>("DateSelected")
    let DateAttribKey : AttributeKey<_> = AttributeKey<System.DateTime>("Date")
    let FormatAttribKey : AttributeKey<_> = AttributeKey<string>("Format")
    let MaximumDateAttribKey : AttributeKey<_> = AttributeKey<System.DateTime>("MaximumDate")
    let MinimumDateAttribKey : AttributeKey<_> = AttributeKey<System.DateTime>("MinimumDate")
    let ImageAspectAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Aspect>("ImageAspect")
    let IsOpaqueAttribKey : AttributeKey<_> = AttributeKey<bool>("IsOpaque")
    let IsAnimationPlayingAttribKey : AttributeKey<_> = AttributeKey<bool>("IsAnimationPlaying")
    let ClickedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("Clicked")
    let PressedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("Pressed")
    let ReleasedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("Released")
    let ImageButtonAspectAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Aspect>("ImageButtonAspect")
    let ImageButtonCornerRadiusAttribKey : AttributeKey<_> = AttributeKey<int>("ImageButtonCornerRadius")
    let ImageButtonSourceAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("ImageButtonSource")
    let IsReadOnlyAttribKey : AttributeKey<_> = AttributeKey<bool>("IsReadOnly")
    let IsSpellCheckEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsSpellCheckEnabled")
    let MaxLengthAttribKey : AttributeKey<_> = AttributeKey<int>("MaxLength")
    let PlaceholderColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("PlaceholderColor")
    let AutoSizeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.EditorAutoSizeOption>("AutoSize")
    let IsTextPredictionEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsTextPredictionEnabled")
    let ClearButtonVisibilityAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ClearButtonVisibility>("ClearButtonVisibility")
    let CursorPositionAttribKey : AttributeKey<_> = AttributeKey<int>("CursorPosition")
    let IsPasswordAttribKey : AttributeKey<_> = AttributeKey<bool>("IsPassword")
    let ReturnCommandAttribKey : AttributeKey<_> = AttributeKey<unit -> unit>("ReturnCommand")
    let ReturnCommandCanExecuteAttribKey : AttributeKey<_> = AttributeKey<bool>("ReturnCommandCanExecute")
    let ReturnTypeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ReturnType>("ReturnType")
    let SelectionLengthAttribKey : AttributeKey<_> = AttributeKey<int>("SelectionLength")
    let CancelButtonColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("CancelButtonColor")
    let SearchCommandAttribKey : AttributeKey<_> = AttributeKey<string -> unit>("SearchCommand")
    let SearchCommandCanExecuteAttribKey : AttributeKey<_> = AttributeKey<bool>("SearchCommandCanExecute")
    let RemainingItemsThresholdReachedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("RemainingItemsThresholdReached")
    let ItemsViewScrolledAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ItemsViewScrolledEventArgs>>("ItemsViewScrolled")
    let EmptyViewAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("EmptyView")
    let HorizontalScrollBarVisibilityAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ScrollBarVisibility>("HorizontalScrollBarVisibility")
    let ItemsUpdatingScrollModeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ItemsUpdatingScrollMode>("ItemsUpdatingScrollMode")
    let ItemsViewItemsSourceAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("ItemsViewItemsSource")
    let RemainingItemsThresholdAttribKey : AttributeKey<_> = AttributeKey<int>("RemainingItemsThreshold")
    let RemainingItemsThresholdReachedCommandAttribKey : AttributeKey<_> = AttributeKey<unit -> unit>("RemainingItemsThresholdReachedCommand")
    let RemainingItemsThresholdReachedCommandCanExecuteAttribKey : AttributeKey<_> = AttributeKey<bool>("RemainingItemsThresholdReachedCommandCanExecute")
    let ItemsViewScrollToAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.ScrollToItem>("ItemsViewScrollTo")
    let VerticalScrollBarVisibilityAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ScrollBarVisibility>("VerticalScrollBarVisibility")
    let StructuredItemsViewHeaderAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.StructuredItems.Value>("StructuredItemsViewHeader")
    let StructuredItemsViewFooterAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.StructuredItems.Value>("StructuredItemsViewFooter")
    let StructuredItemsViewItemsLayoutAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.IItemsLayout>("StructuredItemsViewItemsLayout")
    let ItemSizingStrategyAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ItemSizingStrategy>("ItemSizingStrategy")
    let CurrentItemChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.CurrentItemChangedEventArgs>>("CurrentItemChanged")
    let PositionChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.PositionChangedEventArgs>>("PositionChanged")
    let XFCarouselViewCurrentItemAttribKey : AttributeKey<_> = AttributeKey<obj>("XFCarouselViewCurrentItem")
    let IndicatorViewAttribKey : AttributeKey<_> = AttributeKey<ViewRef<Xamarin.Forms.IndicatorView>>("IndicatorView")
    let IsBounceEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsBounceEnabled")
    let IsScrollAnimatedAttribKey : AttributeKey<_> = AttributeKey<bool>("IsScrollAnimated")
    let IsSwipeEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsSwipeEnabled")
    let XFCarouselViewItemsLayoutAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("XFCarouselViewItemsLayout")
    let LoopAttribKey : AttributeKey<_> = AttributeKey<bool>("Loop")
    let PeekAreaInsetsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Thickness>("PeekAreaInsets")
    let XFCarouselViewPositionAttribKey : AttributeKey<_> = AttributeKey<int>("XFCarouselViewPosition")
    let SelectionChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.SelectionChangedEventArgs>>("SelectionChanged")
    let SelectedItemAttribKey : AttributeKey<_> = AttributeKey<int option>("SelectedItem")
    let SelectedItemsAttribKey : AttributeKey<_> = AttributeKey<int array option>("SelectedItems")
    let SelectableItemsViewSelectionModeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SelectionMode>("SelectableItemsViewSelectionMode")
    let GroupFooterTemplateAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.DataTemplate>("GroupFooterTemplate")
    let GroupHeaderTemplateAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.DataTemplate>("GroupHeaderTemplate")
    let IsGroupedAttribKey : AttributeKey<_> = AttributeKey<bool>("IsGrouped")
    let ItemAppearingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ItemVisibilityEventArgs>>("ItemAppearing")
    let ItemDisappearingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ItemVisibilityEventArgs>>("ItemDisappearing")
    let XFListViewItemSelectedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.SelectedItemChangedEventArgs>>("XFListViewItemSelected")
    let ItemTappedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ItemTappedEventArgs>>("ItemTapped")
    let RefreshingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("Refreshing")
    let XFListViewScrolledAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ScrolledEventArgs>>("XFListViewScrolled")
    let XFListViewFooterAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("XFListViewFooter")
    let HasUnevenRowsAttribKey : AttributeKey<_> = AttributeKey<bool>("HasUnevenRows")
    let XFListViewHeaderAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("XFListViewHeader")
    let IsGroupingEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsGroupingEnabled")
    let IsPullToRefreshEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsPullToRefreshEnabled")
    let IsRefreshingAttribKey : AttributeKey<_> = AttributeKey<bool>("IsRefreshing")
    let RefreshCommandAttribKey : AttributeKey<_> = AttributeKey<unit -> unit>("RefreshCommand")
    let RefreshCommandCanExecuteAttribKey : AttributeKey<_> = AttributeKey<bool>("RefreshCommandCanExecute")
    let RefreshControlColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("RefreshControlColor")
    let RowHeightAttribKey : AttributeKey<_> = AttributeKey<int>("RowHeight")
    let XFListViewScrollToAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.ScrollToItem>("XFListViewScrollTo")
    let XFListViewSelectionModeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ListViewSelectionMode>("XFListViewSelectionMode")
    let SeparatorColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("SeparatorColor")
    let SeparatorVisibilityAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SeparatorVisibility>("SeparatorVisibility")
    let ListViewGroupedItemSelectedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.SelectedItemChangedEventArgs>>("ListViewGroupedItemSelected")
    let ListViewGroupedItemsSourceAttribKey : AttributeKey<_> = AttributeKey<(string * ViewElement * ViewElement[])[]>("ListViewGroupedItemsSource")
    let ListViewGroupedScrollToAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.ScrollToGroupedItem>("ListViewGroupedScrollTo")
    let ShowJumpListAttribKey : AttributeKey<_> = AttributeKey<bool>("ShowJumpList")
    let FormattedTextAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("FormattedText")
    let LineBreakModeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.LineBreakMode>("LineBreakMode")
    let MaxLinesAttribKey : AttributeKey<_> = AttributeKey<int>("MaxLines")
    let TextTypeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.TextType>("TextType")
    let CascadeInputTransparentAttribKey : AttributeKey<_> = AttributeKey<bool>("CascadeInputTransparent")
    let IsClippedToBoundsAttribKey : AttributeKey<_> = AttributeKey<bool>("IsClippedToBounds")
    let ControlTemplateAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ControlTemplate>("ControlTemplate")
    let LayoutBoundsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Rectangle>("LayoutBounds")
    let LayoutFlagsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.AbsoluteLayoutFlags>("LayoutFlags")
    let AlignContentAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlexAlignContent>("AlignContent")
    let AlignItemsAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlexAlignItems>("AlignItems")
    let AlignSelfAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlexAlignSelf>("AlignSelf")
    let OrderAttribKey : AttributeKey<_> = AttributeKey<int>("Order")
    let BasisAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlexBasis>("Basis")
    let GrowAttribKey : AttributeKey<_> = AttributeKey<single>("Grow")
    let ShrinkAttribKey : AttributeKey<_> = AttributeKey<single>("Shrink")
    let FlexLayoutDirectionAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlexDirection>("FlexLayoutDirection")
    let JustifyContentAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlexJustify>("JustifyContent")
    let FlexLayoutPositionAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlexPosition>("FlexLayoutPosition")
    let WrapAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlexWrap>("Wrap")
    let ColumnDefinitionsAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Dimension array>("ColumnDefinitions")
    let ColumnSpacingAttribKey : AttributeKey<_> = AttributeKey<float>("ColumnSpacing")
    let RowDefinitionsAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Dimension array>("RowDefinitions")
    let RowSpacingAttribKey : AttributeKey<_> = AttributeKey<float>("RowSpacing")
    let RowAttribKey : AttributeKey<_> = AttributeKey<int>("Row")
    let RowSpanAttribKey : AttributeKey<_> = AttributeKey<int>("RowSpan")
    let ColumnAttribKey : AttributeKey<_> = AttributeKey<int>("Column")
    let ColumnSpanAttribKey : AttributeKey<_> = AttributeKey<int>("ColumnSpan")
    let BoundsConstraintAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.BoundsConstraint>("BoundsConstraint")
    let HeightConstraintAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Constraint>("HeightConstraint")
    let WidthConstraintAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Constraint>("WidthConstraint")
    let XConstraintAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Constraint>("XConstraint")
    let YConstraintAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Constraint>("YConstraint")
    let StackLayoutOrientationAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.StackOrientation>("StackLayoutOrientation")
    let SpacingAttribKey : AttributeKey<_> = AttributeKey<float>("Spacing")
    let ScrollViewScrolledAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ScrolledEventArgs>>("ScrollViewScrolled")
    let ScrollViewOrientationAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.ScrollOrientation>("ScrollViewOrientation")
    let ScrollViewScrollToAttribKey : AttributeKey<_> = AttributeKey<double * double * AnimationKind>("ScrollViewScrollTo")
    let FrameCornerRadiusAttribKey : AttributeKey<_> = AttributeKey<float>("FrameCornerRadius")
    let HasShadowAttribKey : AttributeKey<_> = AttributeKey<bool>("HasShadow")
    let RefreshColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("RefreshColor")
    let HasRenderLoopAttribKey : AttributeKey<_> = AttributeKey<bool>("HasRenderLoop")
    let SelectedIndexChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("SelectedIndexChanged")
    let PickerItemsSourceAttribKey : AttributeKey<_> = AttributeKey<string array>("PickerItemsSource")
    let SelectedIndexAttribKey : AttributeKey<_> = AttributeKey<int>("SelectedIndex")
    let TitleColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("TitleColor")
    let ProgressAttribKey : AttributeKey<_> = AttributeKey<float>("Progress")
    let ProgressColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ProgressColor")
    let DragCompletedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("DragCompleted")
    let DragStartedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("DragStarted")
    let ValueChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ValueChangedEventArgs>>("ValueChanged")
    let MaximumTrackColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("MaximumTrackColor")
    let MinimumMaximumAttribKey : AttributeKey<_> = AttributeKey<float * float>("MinimumMaximum")
    let MinimumTrackColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("MinimumTrackColor")
    let ThumbColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("ThumbColor")
    let ThumbImageSourceAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("ThumbImageSource")
    let SliderValueAttribKey : AttributeKey<_> = AttributeKey<float>("SliderValue")
    let IncrementAttribKey : AttributeKey<_> = AttributeKey<float>("Increment")
    let StepperValueAttribKey : AttributeKey<_> = AttributeKey<float>("StepperValue")
    let ToggledAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.ToggledEventArgs>>("Toggled")
    let IsToggledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsToggled")
    let IntentAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.TableIntent>("Intent")
    let RootAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("Root")
    let TimeAttribKey : AttributeKey<_> = AttributeKey<System.TimeSpan>("Time")
    let TimeChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<System.TimeSpan>>("TimeChanged")
    let EvalRequestedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.Internals.EvalRequested>>("EvalRequested")
    let GoBackRequestedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("GoBackRequested")
    let GoForwardRequestedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("GoForwardRequested")
    let WebViewNavigatedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.WebNavigatedEventArgs>>("WebViewNavigated")
    let WebViewNavigatingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.WebNavigatingEventArgs>>("WebViewNavigating")
    let ReloadRequestedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("ReloadRequested")
    let CookiesAttribKey : AttributeKey<_> = AttributeKey<System.Net.CookieContainer>("Cookies")
    let WebViewSourceAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.WebViewSource>("WebViewSource")
    let ReloadAttribKey : AttributeKey<_> = AttributeKey<bool>("Reload")
    let SnapPointsAlignmentAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SnapPointsAlignment>("SnapPointsAlignment")
    let SnapPointsTypeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SnapPointsType>("SnapPointsType")
    let HorizontalItemSpacingAttribKey : AttributeKey<_> = AttributeKey<float>("HorizontalItemSpacing")
    let SpanAttribKey : AttributeKey<_> = AttributeKey<int>("Span")
    let VerticalItemSpacingAttribKey : AttributeKey<_> = AttributeKey<float>("VerticalItemSpacing")
    let ItemSpacingAttribKey : AttributeKey<_> = AttributeKey<float>("ItemSpacing")
    let XFSearchHandlerUnfocusedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<System.EventArgs>>("XFSearchHandlerUnfocused")
    let XFSearchHandlerFocusedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<System.EventArgs>>("XFSearchHandlerFocused")
    let ClearIconAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("ClearIcon")
    let ClearIconHelpTextAttribKey : AttributeKey<_> = AttributeKey<string>("ClearIconHelpText")
    let ClearIconNameAttribKey : AttributeKey<_> = AttributeKey<string>("ClearIconName")
    let ClearPlaceholderCommandAttribKey : AttributeKey<_> = AttributeKey<unit -> unit>("ClearPlaceholderCommand")
    let ClearPlaceholderCommandCanExecuteAttribKey : AttributeKey<_> = AttributeKey<bool>("ClearPlaceholderCommandCanExecute")
    let ClearPlaceholderEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("ClearPlaceholderEnabled")
    let ClearPlaceholderHelpTextAttribKey : AttributeKey<_> = AttributeKey<string>("ClearPlaceholderHelpText")
    let ClearPlaceholderIconAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("ClearPlaceholderIcon")
    let ClearPlaceholderNameAttribKey : AttributeKey<_> = AttributeKey<string>("ClearPlaceholderName")
    let IsSearchEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsSearchEnabled")
    let XFSearchHandlerItemsSourceAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("XFSearchHandlerItemsSource")
    let QueryAttribKey : AttributeKey<_> = AttributeKey<string>("Query")
    let QueryIconAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Image.Value>("QueryIcon")
    let QueryIconHelpTextAttribKey : AttributeKey<_> = AttributeKey<string>("QueryIconHelpText")
    let QueryIconNameAttribKey : AttributeKey<_> = AttributeKey<string>("QueryIconName")
    let SearchBoxVisibilityAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SearchBoxVisibility>("SearchBoxVisibility")
    let ShowsResultsAttribKey : AttributeKey<_> = AttributeKey<bool>("ShowsResults")
    let SearchHandlerItemSelectedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<System.Object>>("SearchHandlerItemSelected")
    let QueryChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<string * string>>("QueryChanged")
    let QueryConfirmedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("QueryConfirmed")
    let CountAttribKey : AttributeKey<_> = AttributeKey<int>("Count")
    let HideSingleAttribKey : AttributeKey<_> = AttributeKey<bool>("HideSingle")
    let IndicatorColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("IndicatorColor")
    let IndicatorSizeAttribKey : AttributeKey<_> = AttributeKey<float>("IndicatorSize")
    let IndicatorTemplateAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("IndicatorTemplate")
    let IndicatorsShapeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.IndicatorShape>("IndicatorsShape")
    let MaximumVisibleAttribKey : AttributeKey<_> = AttributeKey<int>("MaximumVisible")
    let IndicatorViewPositionAttribKey : AttributeKey<_> = AttributeKey<int>("IndicatorViewPosition")
    let SelectedIndicatorColorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Color>("SelectedIndicatorColor")
    let InvokedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<System.EventArgs>>("Invoked")
    let CollectionChangedAttribKey : AttributeKey<_> = AttributeKey<System.Collections.Specialized.NotifyCollectionChangedEventHandler>("CollectionChanged")
    let ModeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SwipeMode>("Mode")
    let SwipeBehaviorOnInvokedAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SwipeBehaviorOnInvoked>("SwipeBehaviorOnInvoked")
    let SwipeChangingAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.SwipeChangingEventArgs>>("SwipeChanging")
    let SwipeEndedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.SwipeEndedEventArgs>>("SwipeEnded")
    let SwipeStartedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler<Xamarin.Forms.SwipeStartedEventArgs>>("SwipeStarted")
    let BottomItemsAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("BottomItems")
    let LeftItemsAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("LeftItems")
    let RightItemsAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("RightItems")
    let SwipeViewThresholdAttribKey : AttributeKey<_> = AttributeKey<float>("SwipeViewThreshold")
    let TopItemsAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("TopItems")
    let RadioButtonContentAttribKey : AttributeKey<_> = AttributeKey<InputTypes.Content.Value>("RadioButtonContent")
    let RadioButtonCornerRadiusAttribKey : AttributeKey<_> = AttributeKey<int>("RadioButtonCornerRadius")
    let RadioButtonFontSizeAttribKey : AttributeKey<_> = AttributeKey<float>("RadioButtonFontSize")
    let GroupNameAttribKey : AttributeKey<_> = AttributeKey<string>("GroupName")
    let RadioButtonValueAttribKey : AttributeKey<_> = AttributeKey<obj>("RadioButtonValue")
    let IsLargeArcAttribKey : AttributeKey<_> = AttributeKey<bool>("IsLargeArc")
    let PointAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Point>("Point")
    let RotationAngleAttribKey : AttributeKey<_> = AttributeKey<float>("RotationAngle")
    let SizeAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Size>("Size")
    let SweepDirectionAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.SweepDirection>("SweepDirection")
    let Point1AttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Point>("Point1")
    let Point2AttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Point>("Point2")
    let Point3AttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Point>("Point3")
    let PointsAttribKey : AttributeKey<_> = AttributeKey<Fabulous.XamarinForms.InputTypes.Points.Value>("Points")
    let IsClosedAttribKey : AttributeKey<_> = AttributeKey<bool>("IsClosed")
    let IsFilledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsFilled")
    let SegmentsAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("Segments")
    let StartPointAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Point>("StartPoint")
    let CenterAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Point>("Center")
    let RadiusXAttribKey : AttributeKey<_> = AttributeKey<float>("RadiusX")
    let RadiusYAttribKey : AttributeKey<_> = AttributeKey<float>("RadiusY")
    let EndPointAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Point>("EndPoint")
    let FiguresAttribKey : AttributeKey<_> = AttributeKey<InputTypes.Figures.Value>("Figures")
    let FillRuleAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Shapes.FillRule>("FillRule")
    let RectAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Rect>("Rect")
    let TransformValueAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Shapes.Matrix>("TransformValue")
    let CenterXAttribKey : AttributeKey<_> = AttributeKey<float>("CenterX")
    let CenterYAttribKey : AttributeKey<_> = AttributeKey<float>("CenterY")
    let SkewXAttribKey : AttributeKey<_> = AttributeKey<float>("SkewX")
    let SkewYAttribKey : AttributeKey<_> = AttributeKey<float>("SkewY")
    let TranslateXAttribKey : AttributeKey<_> = AttributeKey<float>("TranslateX")
    let TranslateYAttribKey : AttributeKey<_> = AttributeKey<float>("TranslateY")
    let MatrixAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Shapes.Matrix>("Matrix")
    let AngleAttribKey : AttributeKey<_> = AttributeKey<float>("Angle")
    let AngleXAttribKey : AttributeKey<_> = AttributeKey<float>("AngleX")
    let AngleYAttribKey : AttributeKey<_> = AttributeKey<float>("AngleY")
    let XAttribKey : AttributeKey<_> = AttributeKey<float>("X")
    let YAttribKey : AttributeKey<_> = AttributeKey<float>("Y")
    let ShapeAspectAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Stretch>("ShapeAspect")
    let FillAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("Fill")
    let StrokeAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("Stroke")
    let StrokeDashArrayAttribKey : AttributeKey<_> = AttributeKey<float array>("StrokeDashArray")
    let StrokeDashOffsetAttribKey : AttributeKey<_> = AttributeKey<float>("StrokeDashOffset")
    let StrokeLineCapAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Shapes.PenLineCap>("StrokeLineCap")
    let StrokeLineJoinAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.Shapes.PenLineJoin>("StrokeLineJoin")
    let StrokeMiterLimitAttribKey : AttributeKey<_> = AttributeKey<float>("StrokeMiterLimit")
    let StrokeThicknessAttribKey : AttributeKey<_> = AttributeKey<float>("StrokeThickness")
    let X1AttribKey : AttributeKey<_> = AttributeKey<float>("X1")
    let X2AttribKey : AttributeKey<_> = AttributeKey<float>("X2")
    let Y1AttribKey : AttributeKey<_> = AttributeKey<float>("Y1")
    let Y2AttribKey : AttributeKey<_> = AttributeKey<float>("Y2")
    let DataAttribKey : AttributeKey<_> = AttributeKey<InputTypes.Content.Value>("Data")
    let RenderTransformAttribKey : AttributeKey<_> = AttributeKey<InputTypes.Content.Value>("RenderTransform")
    let RoundRectangleGeometryCornerRadiusAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.CornerRadius>("RoundRectangleGeometryCornerRadius")
    let GradientStopsAttribKey : AttributeKey<_> = AttributeKey<ViewElement array>("GradientStops")
    let OffsetAttribKey : AttributeKey<_> = AttributeKey<single>("Offset")
    let RadiusAttribKey : AttributeKey<_> = AttributeKey<float>("Radius")
    let IsPresentedChangedAttribKey : AttributeKey<_> = AttributeKey<System.EventHandler>("IsPresentedChanged")
    let FlyoutPageDetailAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("FlyoutPageDetail")
    let FlyoutAttribKey : AttributeKey<_> = AttributeKey<ViewElement>("Flyout")
    let FlyoutLayoutBehaviorAttribKey : AttributeKey<_> = AttributeKey<Xamarin.Forms.FlyoutLayoutBehavior>("FlyoutLayoutBehavior")
    let IsGestureEnabledAttribKey : AttributeKey<_> = AttributeKey<bool>("IsGestureEnabled")
    let IsPresentedAttribKey : AttributeKey<_> = AttributeKey<bool>("IsPresented")

