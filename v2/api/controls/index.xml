<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Controls on</title><link>https://docs.fabulous.dev/v2/api/controls/</link><description>Recent content in Controls on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://docs.fabulous.dev/v2/api/controls/index.xml" rel="self" type="application/rss+xml"/><item><title>AnyView</title><link>https://docs.fabulous.dev/v2/api/controls/any-view/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/any-view/</guid><description>AnyView allows changing the type of view used in a given view hierarchy. Whenever the type of view used with an AnyView changes.
Constructors # Constructors Description AnyView&amp;lt;&amp;lsquo;msg, &amp;lsquo;marker when &amp;lsquo;marker :&amp;gt; IView&amp;gt;(widget: WidgetBuilder&amp;lt;&amp;lsquo;msg, &amp;lsquo;marker&amp;gt;) Downcast to IView to allow to return different types of views in a single expression (e.g. if/else, match with pattern, etc.) AnyView&amp;lt;&amp;lsquo;msg, &amp;lsquo;marker when &amp;lsquo;marker :&amp;gt; IPage&amp;gt;(widget: WidgetBuilder&amp;lt;&amp;lsquo;msg, &amp;lsquo;marker&amp;gt;) Downcast to IPage to allow to return different types of pages in a single expression (e.</description></item><item><title>Application</title><link>https://docs.fabulous.dev/v2/api/controls/application/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/application/</guid><description>Inheritance: Element
Xamarin.Forms documentation: Application API
Constructors # Constructors Description Application&amp;lt;&amp;lsquo;msg, &amp;lsquo;marker when &amp;lsquo;marker :&amp;gt; IPage&amp;gt;(mainPage: WidgetBuilder&amp;lt;&amp;lsquo;msg, &amp;lsquo;marker&amp;gt;) Creates a new instance of the Application with a Page Properties # Properties Description userAppTheme(value: OSAppTheme) Sets the application theme. resources(value: ResourceDictionary) Sets the global resources for the application. reference(value: ViewRef&amp;lt;Application&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>Geometry</title><link>https://docs.fabulous.dev/v2/api/controls/geometry/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/geometry/</guid><description>Inheritance: Element
Xamarin.Forms documentation: Geometry API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # This control can&amp;rsquo;t be instantiated on its own. Its properties and events are inherited by its descendants.</description></item><item><title>IndicatorView</title><link>https://docs.fabulous.dev/v2/api/controls/indicator-view/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/indicator-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; Layout -&amp;gt; TemplatedView
Xamarin.Forms documentation: IndicatorView API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description IndicatorView(reference: ViewRef) Creates a new instance of the control with the given reference. Properties # Properties Description selectedIndicatorColor(light: FabColor, ?</description></item><item><title>Layout</title><link>https://docs.fabulous.dev/v2/api/controls/layout/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/layout/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: Layout API
Constructors # This control can&amp;rsquo;t be instantiated on its own. Its properties and events are inherited by its descendants.
Properties # Properties Description padding(value: Thickness) Sets the padding around of the layout. padding(value: float) Sets the padding around of the layout. padding(left: float, top: float, right: float, bottom: float) Sets the padding around of the layout.</description></item><item><title>TemplatedView</title><link>https://docs.fabulous.dev/v2/api/controls/templated-view/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/templated-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; Layout
Xamarin.Forms documentation: TemplatedView API
Constructors # This control can&amp;rsquo;t be instantiated on its own. Its properties and events are inherited by its descendants.</description></item><item><title>CarouselView</title><link>https://docs.fabulous.dev/v2/api/controls/carousel-view/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/carousel-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; View
Xamarin.Forms documentation: CarouselView API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description CarouselView(items: seq&amp;lt;&amp;lsquo;itemData&amp;gt;) Creates a CarouselView with the specified items. Properties # Properties Description isBounceEnabled(value: bool) Sets a value that indicates whether the scrolling bounce is enabled.</description></item><item><title>CollectionView</title><link>https://docs.fabulous.dev/v2/api/controls/collection-view/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/collection-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; View
Xamarin.Forms documentation: CollectionView API / Guide
For details on how the control actually works, please refer to:
Xamarin.Forms documentation. Virtualized Collections
Constructors # Constructors Description CollectionView(items: seq&amp;lt;&amp;lsquo;itemData&amp;gt;) Creates a CollectionView with the specified items. GroupedCollectionView(items: seq&amp;lt;&amp;lsquo;groupData&amp;gt;) Creates a GroupedCollectionView with the specified items. Properties # Properties Description selectionMode(value: SelectionMode) Sets a value that indicates how the items in the CollectionView are selected.</description></item><item><title>ItemsView</title><link>https://docs.fabulous.dev/v2/api/controls/items-view/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/items-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: ItemsView API
Properties # Properties Description remainingItemsThreshold(value: int, onThresholdReached: &amp;lsquo;msg) Sets a value that indicates the number of items that remain in the view before the remainingItemsThresholdReached event is raised. horizontalScrollBarVisibility(value: ScrollBarVisibility) Sets a value that indicates whether the horizontal scroll bar is visible. verticalScrollBarVisibility(value: ScrollBarVisibility) Sets a value that indicates whether the vertical scroll bar is visible.</description></item><item><title>ListView</title><link>https://docs.fabulous.dev/v2/api/controls/list-view/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/list-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; View
Xamarin.Forms documentation: ListView API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation. Virtualized Collections
Constructors # Constructors Description ListView(items: seq&amp;lt;&amp;lsquo;itemData&amp;gt;) Creates a new ListView with the given items. GroupedListView(items: seq&amp;lt;&amp;lsquo;groupData&amp;gt;) Creates a new GroupedListView with the given items. Properties # Properties Description header(content: WidgetBuilder&amp;lt;&amp;lsquo;msg, &amp;lsquo;contentMarker&amp;gt;) Sets the header of the ListView.</description></item></channel></rss>