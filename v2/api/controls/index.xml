<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Controls on</title><link>https://docs.fabulous.dev/v2/api/controls/</link><description>Recent content in Controls on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://docs.fabulous.dev/v2/api/controls/index.xml" rel="self" type="application/rss+xml"/><item><title>ActivityIndicator</title><link>https://docs.fabulous.dev/v2/api/controls/activity-indicator/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/activity-indicator/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: ActivityIndicator API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description ActivityIndicator(isRunning: bool) Define an ActivityIndicator widget with its current state Properties # Properties Description color(light: FabColor, ?dark: FabColor) Sets the activity indicator color depending if light or dark mode reference(value: ViewRef&amp;lt;ActivityIndicator&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>BoxView</title><link>https://docs.fabulous.dev/v2/api/controls/box-view/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/box-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: BoxView API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description BoxView(light: FabColor, ?dark: FabColor) Define a BoxView widget with its fill color depending if light or dark mode Properties # Properties Description cornerRadius(value: float) Sets the corner radius reference(value: ViewRef&amp;lt;BoxView&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>FormattedLabel</title><link>https://docs.fabulous.dev/v2/api/controls/formatted-label/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/formatted-label/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; Label
Xamarin.Forms documentation: FormattedLabel API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description FormattedLabel() Define a FormattedLabel widget. This widget accept Span widgets as children Properties # Properties Description reference(value: ViewRef&amp;lt;Label&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>ProgressBar</title><link>https://docs.fabulous.dev/v2/api/controls/progress-bar/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/progress-bar/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; InputView
Xamarin.Forms documentation: ProgressBar API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description ProgressBar(progress: float) Define a ProgressBar widget with the progress value (between 0.0 and 1.0) ProgressBar(progress: float, duration: int, easing: Easing) Define a ProgressBar widget with an animated change of the progress value (between 0.</description></item><item><title>RadioButton</title><link>https://docs.fabulous.dev/v2/api/controls/radio-button/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/radio-button/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; Layout -&amp;gt; TemplatedView
Xamarin.Forms documentation: RadioButton API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description RadioButton(isChecked: bool, onChecked: bool -&amp;gt; &amp;lsquo;msg) Define a default RadioButton widget with the checked state RadioButton(content: string, isChecked: bool, onChecked: bool -&amp;gt; &amp;lsquo;msg) Define a RadioButton widget with a text and the checked state Properties # Properties Description borderColor(light: FabColor, ?</description></item><item><title>Slider</title><link>https://docs.fabulous.dev/v2/api/controls/slider/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/slider/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: Slider API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Slider(min: float, max: float, value: float, onValueChanged: float -&amp;gt; &amp;lsquo;msg) Define a Slider widget with the min-max bounds and the current value Properties # Properties Description maximumTrackColor(light: FabColor, ?</description></item><item><title>Span</title><link>https://docs.fabulous.dev/v2/api/controls/span/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/span/</guid><description>Inheritance: Element })
Xamarin.Forms documentation: Span API
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Span(text: string) Define a Span widget with a text Properties # Properties Description backgroundColor(light: FabColor, ?dark: FabColor) Sets the background color depending if light or dark mode characterSpacing(value: float) Sets the character spacing font(?</description></item><item><title>Stepper</title><link>https://docs.fabulous.dev/v2/api/controls/stepper/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/stepper/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: Stepper API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Stepper(min: float, max: float, value: float, onValueChanged: float -&amp;gt; &amp;lsquo;msg) Define a Stepper widget with the min-max bounds and the current value Properties # Properties Description increment(value: float) Sets the increment step between each selected values reference(value: ViewRef&amp;lt;Stepper&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>Switch</title><link>https://docs.fabulous.dev/v2/api/controls/switch/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/switch/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: Switch API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Switch(isToggled: bool, onToggled: bool -&amp;gt; &amp;lsquo;msg) Define a Switch widget with its toggled state Properties # Properties Description thumbColor(light: FabColor, ?dark: FabColor) Sets the thumb color depending if light or dark mode colorOn(light: FabColor, ?</description></item><item><title>CheckBox</title><link>https://docs.fabulous.dev/v2/api/controls/checkbox/</link><pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/checkbox/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: CheckBox API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description CheckBox(isChecked: bool, onCheckedChanged: bool -&amp;gt; &amp;lsquo;msg) Defines a CheckBox widget Properties # Properties Description characterSpacing(light: FabColor, ?dark: FabColor) Sets the spacing between each character of the text reference(value: ViewRef&amp;lt;CheckBox&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item></channel></rss>