<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Controls on</title><link>https://docs.fabulous.dev/v2/api/controls/</link><description>Recent content in Controls on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://docs.fabulous.dev/v2/api/controls/index.xml" rel="self" type="application/rss+xml"/><item><title>CarouselView</title><link>https://docs.fabulous.dev/v2/api/controls/carousel-view/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/carousel-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; View Xamarin.Forms documentation: CarouselView API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description CarouselView(items: seq&amp;lt;&amp;lsquo;itemData&amp;gt;) Creates a CarouselView with the specified items. Properties # Properties Description isBounceEnabled(value: bool) Sets a value that indicates whether the scrolling bounce is enabled.</description></item><item><title>CollectionView</title><link>https://docs.fabulous.dev/v2/api/controls/collection-view/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/collection-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; View Xamarin.Forms documentation: CollectionView API / Guide
For details on how the control actually works, please refer to:
Xamarin.Forms documentation. Virtualized Collections
Constructors # Constructors Description CollectionView(items: seq&amp;lt;&amp;lsquo;itemData&amp;gt;) Creates a CollectionView with the specified items. GroupedCollectionView(items: seq&amp;lt;&amp;lsquo;groupData&amp;gt;) Creates a GroupedCollectionView with the specified items. Properties # Properties Description selectionMode(value: SelectionMode) Sets a value that indicates how the items in the CollectionView are selected.</description></item><item><title>ItemsView</title><link>https://docs.fabulous.dev/v2/api/controls/items-view/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/items-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View Xamarin.Forms documentation: ItemsView API
Properties # Properties Description remainingItemsThreshold(value: int, onThresholdReached: &amp;lsquo;msg) Sets a value that indicates the number of items that remain in the view before the remainingItemsThresholdReached event is raised. horizontalScrollBarVisibility(value: ScrollBarVisibility) Sets a value that indicates whether the horizontal scroll bar is visible. verticalScrollBarVisibility(value: ScrollBarVisibility) Sets a value that indicates whether the vertical scroll bar is visible.</description></item><item><title>ListView</title><link>https://docs.fabulous.dev/v2/api/controls/list-view/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/list-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; View Xamarin.Forms documentation: ListView API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation. Virtualized Collections
Constructors # Constructors Description ListView(items: seq&amp;lt;&amp;lsquo;itemData&amp;gt;) Creates a new ListView with the given items. GroupedListView(items: seq&amp;lt;&amp;lsquo;groupData&amp;gt;) Creates a new GroupedListView with the given items. Properties # Properties Description header(content: WidgetBuilder&amp;lt;&amp;lsquo;msg, &amp;lsquo;contentMarker&amp;gt;) Sets the header of the ListView.</description></item><item><title>Editor</title><link>https://docs.fabulous.dev/v2/api/controls/editor/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/editor/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; InputView
Xamarin.Forms documentation: Editor API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Editor(text: string, onTextChanged: string -&amp;gt; &amp;lsquo;msg) Defines a Editor widget with a text and onTextChanged event. Properties # Properties Description autoSize(value: EditorAutoSizeOption) Sets a value that controls whether the editor will change size to accommodate input as the user enters it.</description></item><item><title>Entry</title><link>https://docs.fabulous.dev/v2/api/controls/entry/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/entry/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; InputView
Xamarin.Forms documentation: Entry API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Entry(text: string, onTextChanged: string -&amp;gt; &amp;lsquo;msg) Defines a Entry widget with a text and onTextChanged event. Properties # Properties Description clearButtonVisibility(value: ClearButtonVisibility) Sets the clear button visibility.</description></item><item><title>InputView</title><link>https://docs.fabulous.dev/v2/api/controls/input-view/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/input-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement
Xamarin.Forms documentation: InputView API
Constructors # This control can&amp;rsquo;t be instantiated on its own. Its properties and events are inherited by its descendants.
Properties # Properties Description characterSpacing(value: float) Sets a value that indicates the number of device-independent units that should be in between characters in the text displayed by the Entry. Applies to Text and Placeholder. isReadOnly(value: bool) Sets a value that indicates whether the user can edit the text in the entry.</description></item><item><title>SearchBar</title><link>https://docs.fabulous.dev/v2/api/controls/search-bar/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/search-bar/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; InputView
Xamarin.Forms documentation: SearchBar API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description SearchBar(text: string, onTextChanged: string -&amp;gt; &amp;lsquo;msg, onSearchButtonPressed: &amp;lsquo;msg) Defines a SearchBar widget with a text, onTextChanged and onSearchButtonPressed events. Properties # Properties Description cancelButtonColor(light: FabColor, ?</description></item><item><title>DatePicker</title><link>https://docs.fabulous.dev/v2/api/controls/date-picker/</link><pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/date-picker/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: DatePicker API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description DatePicker(date: DateTime, onDateSelected: DateTime -&amp;gt; &amp;lsquo;msg) Defines a DatePicker widget with a date and onDateSelected event Properties # Properties Description characterSpacing(value: float) Sets the spacing between each character of the date picker font(?</description></item><item><title>Picker</title><link>https://docs.fabulous.dev/v2/api/controls/picker/</link><pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/picker/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: Picker API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Picker(items: string list, selectedIndex: int, onSelectedIndexChanged: int -&amp;gt; &amp;lsquo;msg) Defines a Picker widget with items list, selected index and onSelectedIndexChanged event Properties # Properties Description characterSpacing(value: float) Sets the spacing between each character of the picker horizontalTextAlignment(value: TextAlignment) Sets the horizontal text alignment of the picker verticalTextAlignment(value: TextAlignment) Sets the vertical text alignment of the picker font(?</description></item></channel></rss>