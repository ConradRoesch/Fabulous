<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Controls on</title><link>https://docs.fabulous.dev/v2/api/controls/</link><description>Recent content in Controls on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://docs.fabulous.dev/v2/api/controls/index.xml" rel="self" type="application/rss+xml"/><item><title>ActivityIndicator</title><link>https://docs.fabulous.dev/v2/api/controls/activity-indicator/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/activity-indicator/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: ActivityIndicator API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description ActivityIndicator(isRunning: bool) Define an ActivityIndicator widget with its current state Properties # Properties Description color(light: FabColor, ?dark: FabColor) Sets the activity indicator color depending if light or dark mode reference(value: ViewRef&amp;lt;ActivityIndicator&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>BoxView</title><link>https://docs.fabulous.dev/v2/api/controls/box-view/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/box-view/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: BoxView API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description BoxView(light: FabColor, ?dark: FabColor) Define a BoxView widget with its fill color depending if light or dark mode Properties # Properties Description cornerRadius(value: float) Sets the corner radius reference(value: ViewRef&amp;lt;BoxView&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>Button</title><link>https://docs.fabulous.dev/v2/api/controls/button/</link><pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/button/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: Button API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Button(text: string, onClicked: &amp;lsquo;msg) Defines a Button widget with a text and clicked event Properties # Properties Description textColor(light: FabColor, ?dark: FabColor) Sets the text color depending if light or dark mode textTransform(value: TextTransform) Sets the text transformation (lowercase, uppercase) to apply on the text cornerRadius(value: int) Sets the corner radius of the button borderColor(light: FabColor, ?</description></item><item><title>CheckBox</title><link>https://docs.fabulous.dev/v2/api/controls/checkbox/</link><pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/checkbox/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: CheckBox API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description CheckBox(isChecked: bool, onCheckedChanged: bool -&amp;gt; &amp;lsquo;msg) Defines a CheckBox widget Properties # Properties Description characterSpacing(light: FabColor, ?dark: FabColor) Sets the spacing between each character of the text reference(value: ViewRef&amp;lt;CheckBox&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>DatePicker</title><link>https://docs.fabulous.dev/v2/api/controls/date-picker/</link><pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/date-picker/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: DatePicker API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description DatePicker(date: DateTime, onDateSelected: DateTime -&amp;gt; &amp;lsquo;msg) Defines a DatePicker widget with a date and onDateSelected event Properties # Properties Description characterSpacing(value: float) Sets the spacing between each character of the date picker font(?</description></item><item><title>Editor</title><link>https://docs.fabulous.dev/v2/api/controls/editor/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/editor/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; InputView
Xamarin.Forms documentation: Editor API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Editor(text: string, onTextChanged: string -&amp;gt; &amp;lsquo;msg) Defines a Editor widget with a text and onTextChanged event. Properties # Properties Description autoSize(value: EditorAutoSizeOption) Sets a value that controls whether the editor will change size to accommodate input as the user enters it.</description></item><item><title>Element</title><link>https://docs.fabulous.dev/v2/api/controls/element/</link><pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/element/</guid><description>Inheritance: None
Xamarin.Forms documentation: Element API
Constructors # This control can&amp;rsquo;t be instantiated on its own. Its properties and events are inherited by its descendants.
Properties # Properties Description automationId(value: string) Sets the automation identifier of the widget Events # Events Description onMounted(value: &amp;lsquo;msg) Listens for the widget being mounted onUnmounted(value: &amp;lsquo;msg) Listens for the widget being unmounted</description></item><item><title>Entry</title><link>https://docs.fabulous.dev/v2/api/controls/entry/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/entry/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; InputView
Xamarin.Forms documentation: Entry API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description Entry(text: string, onTextChanged: string -&amp;gt; &amp;lsquo;msg) Defines a Entry widget with a text and onTextChanged event. Properties # Properties Description clearButtonVisibility(value: ClearButtonVisibility) Sets the clear button visibility.</description></item><item><title>FormattedLabel</title><link>https://docs.fabulous.dev/v2/api/controls/formatted-label/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/formatted-label/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View -&amp;gt; Label
Xamarin.Forms documentation: FormattedLabel API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description FormattedLabel() Define a FormattedLabel widget. This widget accept Span widgets as children Properties # Properties Description reference(value: ViewRef&amp;lt;Label&amp;gt;) Sets a ViewRef instance to retrieve the Xamarin.</description></item><item><title>ImageButton</title><link>https://docs.fabulous.dev/v2/api/controls/image-button/</link><pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/v2/api/controls/image-button/</guid><description>Inheritance: Element -&amp;gt; NavigableElement -&amp;gt; VisualElement -&amp;gt; View
Xamarin.Forms documentation: ImageButton API / Guide
For details on how the control actually works, please refer to the Xamarin.Forms documentation.
Constructors # Constructors Description ImageButton(aspect: Aspect, light: ImageSource, onClicked: &amp;lsquo;msg, ?dark: ImageSource) Define a ImageButton widget with an ImageSource depending if light or dark mode ImageButton(aspect: Aspect, light: string, onClicked: &amp;lsquo;msg, ?dark: string) Define a ImageButton widget with a path to an image depending if light or dark mode ImageButton(aspect: Aspect, light: Uri, onClicked: &amp;lsquo;msg, ?</description></item></channel></rss>