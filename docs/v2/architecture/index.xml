<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on</title><link>https://fsprojects.github.io/Fabulous/docs/v2/architecture/</link><description>Recent content in Architecture on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://fsprojects.github.io/Fabulous/docs/v2/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Reasonable goals of v2</title><link>https://fsprojects.github.io/Fabulous/docs/v2/architecture/goals-of-v2/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://fsprojects.github.io/Fabulous/docs/v2/architecture/goals-of-v2/</guid><description>Due to the complex nature of GUI framework development, Fabulous v2 represents a substantial amount of work.
In order to manage and optimize the time of everyone involved, more reasonable goals are required to get a version 2 out as fast as possible.
Doing a complete redesign of the architecture + adding .NET 6 / MAUI support at the same time feels really discouraging.
That&amp;rsquo;s why this version 2 will be done in 4 separate releases:</description></item><item><title>Virtualized collections</title><link>https://fsprojects.github.io/Fabulous/docs/v2/architecture/virtualized-collections/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://fsprojects.github.io/Fabulous/docs/v2/architecture/virtualized-collections/</guid><description>Virtualized collection enables displaying a scrolling list of data while only instantiating the visible rows. When scrolling, the no longer visible rows are reused and updated with the new data.
In Xamarin.Forms, this is done via 2 controls: ListView and CollectionView. Also those controls support grouping data and displaying a group header/footer.
My main idea was to let the user pass in its data source and declare a template function (as well as 2 others for header/footer).</description></item><item><title>Attribute definitions</title><link>https://fsprojects.github.io/Fabulous/docs/v2/architecture/attribute-definitions/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://fsprojects.github.io/Fabulous/docs/v2/architecture/attribute-definitions/</guid><description>Attribute definition helpers # defineBindableWithEvent (Xamarin.Forms) # Values and event handlers are very similar. They are both values: one has a concrete value, the other has a function value. That&amp;rsquo;s why in v2, values and events are both treated as individual scalar attributes.
That works most of the time, but some properties and events have a strong dependency. E.g.:
Entry: Text / TextChanged Slider: Value / ValueChanged ListView: SelectedIndex / SelectedIndex This is required to be able to react to user interactions like users are inputting text, toggling a switch, etc.</description></item></channel></rss>