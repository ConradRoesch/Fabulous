<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Controls on</title><link>https://docs.fabulous.dev/docs/v1/api/controls/</link><description>Recent content in Controls on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 31 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://docs.fabulous.dev/docs/v1/api/controls/index.xml" rel="self" type="application/rss+xml"/><item><title>ActivityIndicator</title><link>https://docs.fabulous.dev/docs/v1/api/controls/activityindicator/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/activityindicator/</guid><description>Basic example # View.ActivityIndicator(isRunning = true) Basic example with styling # View.ActivityIndicator( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.LayoutColor, isRunning = true ) See also:
ActivityIndicator in Xamarin Forms Xamarin.Forms.ActivityIndicator More examples # A simple ActivityIndicator is as follows:
View.ActivityIndicator( isRunning = (count &amp;gt; 0) )</description></item><item><title>BoxView</title><link>https://docs.fabulous.dev/docs/v1/api/controls/boxview/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/boxview/</guid><description>Basic example # View.BoxView() Basic example with styling # View.BoxView( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.ViewColor ) See also:
BoxView in Xamarin Forms Xamarin.Forms.BoxView More examples # An example BoxView is as follows:
View.BoxView( color = Color.CornflowerBlue, cornerRadius = CornerRadius 10., horizontalOptions = LayoutOptions.Center )</description></item><item><title>Button</title><link>https://docs.fabulous.dev/docs/v1/api/controls/button/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/button/</guid><description>Basic example # View.Button(&amp;quot;Button&amp;quot;) Basic example with styling # View.Button( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.ButtonColor, padding = style.Padding, text = &amp;quot;Button&amp;quot; ) See also:
Button in Xamarin Forms Xamarin.Forms.Button More examples # Buttons are created using View.Button. The command of a button will normally dispatch a messsage. For example:
View.Button( text = &amp;quot;Deposit&amp;quot;, command = (fun () -&amp;gt; dispatch (Add 10.0)) )</description></item><item><title>CarouselPage</title><link>https://docs.fabulous.dev/docs/v1/api/controls/carouselpage/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/carouselpage/</guid><description>Basic example # View.CarouselPage( children = [ View.ContentPage( title =&amp;quot;carousel1&amp;quot;, content = View.Label(&amp;quot;carousel page 1&amp;quot;) ) View.ContentPage( title =&amp;quot;carousel2&amp;quot;, content = View.Label(&amp;quot;carousel page 2&amp;quot;) ) ] ) Basic example with styling # View.CarouselPage( backgroundColor = style.PageColor, title = &amp;quot;CarouselPage&amp;quot;, children = [ View.ContentPage( title =&amp;quot;carousel1&amp;quot;, content = View.Label( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.ViewColor, padding = style.Padding, text = &amp;quot;carousel page 1&amp;quot; ) ) View.ContentPage( title =&amp;quot;carousel1&amp;quot;, content = View.</description></item><item><title>CarouselView</title><link>https://docs.fabulous.dev/docs/v1/api/controls/carouselview/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/carouselview/</guid><description>Basic example # View.CarouselView([ View.Label(&amp;quot;First CarouselView&amp;quot;) View.Label(&amp;quot;Second CarouselView&amp;quot;) View.Label(&amp;quot;Third CarouselView&amp;quot;) ]) Basic example with styling # View.CarouselView( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.LayoutColor, items = [ View.Label( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.ViewColor, padding = style.Padding, text = &amp;quot;First CarouselView&amp;quot; ) View.Label( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.ViewColor2, padding = style.Padding, text = &amp;quot;Second CarouselView&amp;quot; ) View.Label( horizontalOptions = style.Position, verticalOptions = style.</description></item><item><title>Checkbox</title><link>https://docs.fabulous.dev/docs/v1/api/controls/checkbox/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/checkbox/</guid><description>Basic example # View.CheckBox(true) Basic example with styling # View.CheckBox( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.LayoutColor, isChecked = true ) See also:
Xamarin.Forms.CheckBox More examples # View.CheckBox( isChecked = true, checkedChanged = (fun on -&amp;gt; dispatch (...)) )</description></item><item><title>CollectionView</title><link>https://docs.fabulous.dev/docs/v1/api/controls/collectionview/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/collectionview/</guid><description>displays a scrollable list of selectable data items, using different layout specifications
Please read the Xamarin.Forms documentation to check whether this control is available for the platforms you target.
Basic example # View.CollectionView([ View.Label(&amp;quot;First CollectionView&amp;quot;) View.Label(&amp;quot;Second CollectionView&amp;quot;) View.Label(&amp;quot;Third CollectionView&amp;quot;) ]) Basic example with styling # View.CollectionView( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.LayoutColor, items = [ View.Label( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.ViewColor, padding = style.</description></item><item><title>ContentPage</title><link>https://docs.fabulous.dev/docs/v1/api/controls/contentpage/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/contentpage/</guid><description>Basic example # A single page app typically returns a ContentPage. For example:
View.ContentPage( title = &amp;quot;ContentPage&amp;quot;, content = View.Label(&amp;quot;ContentPage with a single Label&amp;quot;) ) Basic example with styling # View.ContentPage( backgroundColor = style.PageColor, title = &amp;quot;ContentPage&amp;quot;, content = View.Label( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.ViewColor, padding = style.Padding, text = &amp;quot;ContentPage with a single Label&amp;quot; ) ) See also:
Xamarin.Forms.ContentPage</description></item><item><title>DatePicker</title><link>https://docs.fabulous.dev/docs/v1/api/controls/datepicker/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/datepicker/</guid><description>Basic example # View.DatePicker() Basic example with styling # View.DatePicker( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.ViewColor ) See also:
Xamarin.Forms.DatePicker More examples # View.DatePicker( minimumDate = DateTime.Today, maximumDate = DateTime.Today + TimeSpan.FromDays(365.0), date = startDate, dateSelected = (fun args -&amp;gt; dispatch (StartDateSelected args.NewDate)) )</description></item><item><title>Editor</title><link>https://docs.fabulous.dev/docs/v1/api/controls/editor/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.fabulous.dev/docs/v1/api/controls/editor/</guid><description>Basic example # View.Editor(&amp;quot;Editor&amp;quot;) Basic example with styling # View.Editor( horizontalOptions = style.Position, verticalOptions = style.Position, backgroundColor = style.LayoutColor, text = &amp;quot;Editor&amp;quot; ) See also:
Editor in Xamarin Forms Xamarin.Forms.Editor More examples # An example Editor is as follows:
View.Editor( text = editorText, textChanged = (fun args -&amp;gt; dispatch (TextChanged(args.OldTextValue, args.NewTextValue))), completed = (fun text -&amp;gt; dispatch (EditorEditCompleted text)) )</description></item></channel></rss>